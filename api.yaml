swagger: "2.0"
info:
  title: "Swagger Example"
  description: >
    This is an example Koa API that provides two endpoints - a health check and a login.
  version: "1.0.0"
host: "localhost:3000"
schemes:
  - "http"
paths:
  /health:
    get:
      summary: "Check the status of the service"
      description: "If the service is up and running correctly the response will be 'UP'"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Health"
        500:
          $ref: '#/responses/500'

  /login:
    post:
      summary: "Authenticate an admin user"
      description: "This endpoint allows users generate a token so they can login to the admin user interface"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Username and password to authenticate"
          required: true
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponse"
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        500:
          $ref: '#/responses/500'

responses:
  400:
    description: Bad Request
    schema:
      $ref: '#/definitions/Error'
  401:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  500:
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Error'

definitions:

  Health:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - "UP"
          - "DOWN"

  LoginRequest:
    type: "object"
    required:
      - username
      - password
    properties:
      username:
        type: "string"
        example: "username@email.com"
      password:
        type: "string"
        example: "secret"

  LoginResponse:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          token:
            type: "string"
            example: "dfjghjk34h5kjhdfkjdfgklj76l8k"

  Error:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          error:
            type: "string"
